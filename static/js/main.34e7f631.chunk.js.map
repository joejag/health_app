{"version":3,"sources":["App.tsx","index.tsx"],"names":["DESIRED_WEIGHT","App","React","useState","items","setItems","useEffect","fetch","then","res","json","result","input","i","length","day","weightColor","fatColor","diffColor","diff","previous","totalWeight","fat","push","decorate","reverse","error","console","log","differenceLost","Math","round","differenceToGo","dRemain","ceil","Date","getTime","progress","abs","className","style","width","map","date","lean","exercise","ate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAmBMA,EAAiB,KAiJRC,MAlHf,WAGE,MAA0BC,IAAMC,SAAkC,IAAlE,mBAAOC,EAAP,KAAcC,EAAd,KACAH,IAAMI,WAAU,WACdC,MACE,yFAECC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MACC,SAACG,GACCN,EAxCO,SAACO,GAEhB,IADA,IAAMD,EAAkC,GAC/BE,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,IAAME,EAAMH,EAAMC,GAEdG,EAAc,SACdC,EAAW,SACTC,EAAYH,EAAII,KAAO,EAAI,MAAQ,QAEzC,GAAU,IAANN,EAAS,CACX,IAAMO,EAAWR,EAAMC,EAAI,GAC3BG,EAAcD,EAAIM,YAAcD,EAASC,YAAc,MAAQ,QAC3DN,EAAIM,YAAcD,EAASC,aAAeN,EAAIO,KAAOF,EAASE,MAChEN,EAAc,UAEhBC,EAAWF,EAAIO,IAAMF,EAASE,IAAM,MAAQ,QAG9CX,EAAOY,KAAP,aACEP,cACAC,WACAC,aACGH,IAIP,OAAOJ,EAcUa,CAASb,GAAQc,cAE5B,SAACC,GACCC,QAAQC,IAAIF,QAGjB,IAEH,IAAMG,EACJzB,EAAMU,OAAS,EACXgB,KAAKC,MAAqD,KAA9C3B,EAAM,GAAGkB,IAAMlB,EAAMA,EAAMU,OAAS,GAAGQ,MAAc,IACjE,EAEAU,EACJ5B,EAAMU,OAAS,EACXgB,KAAKC,MAAwC,KAAjC3B,EAAM,GAAGkB,IAAMtB,IAAyB,IACpD,EAEAiC,EAAUH,KAAKI,MAClB,IAAIC,KAAK,cAAcC,WAAY,IAAID,MAAOC,WAA/C,OAIIC,EACJjC,EAAMU,OAAS,EAGP,IAFJgB,KAAKQ,IACHT,GAAkBzB,EAAMA,EAAMU,OAAS,GAAGQ,IAAMtB,IAElD,EAEN,OACE,iCACGI,EAAMU,OAAS,GACd,qCACE,+BACGV,EAAMA,EAAMU,OAAS,GAAGQ,IAD3B,OACoC,IAClC,uBAAMiB,UAAU,QAAhB,UAAyBV,EAAzB,QAFF,KAEsD,IACpD,uBAAMU,UAAS,MAAf,UAAyBnC,EAAM,GAAGkB,IAAlC,QAHF,KAGoD,IAClD,uBAAMiB,UAAU,MAAhB,UAAuBP,EAAvB,QAJF,MAIqDhC,EAJrD,QAOA,4BACE,+BAAKiC,EAAL,oCAEF,qBAAKM,UAAU,qBAAf,SACE,qBAAKA,UAAU,eAAf,SACE,sBACEA,UAAU,oBACVC,MAAO,CAAEC,MAAM,GAAD,OAAKJ,EAAL,eAMxB,kCACE,gCACE,+BACE,sCACA,wCAEE,uBAFF,kBAKA,0CAEE,uBAFF,2BAOJ,gCACGjC,EAAMsC,KAAI,SAAC/B,GAAD,OACT,+BACE,6BAAKA,EAAOgC,OACZ,+BACE,sBAAMJ,UAAW5B,EAAOK,YAAxB,SAAsCL,EAAOU,cAC7C,uBACA,sBAAMkB,UAAS,cAAS5B,EAAOM,UAA/B,SACGN,EAAOW,MAJZ,MAKY,+BAAOX,EAAOiC,UAE1B,+BACE,sBAAML,UAAW5B,EAAOO,UAAxB,SAAoCP,EAAOQ,OAC3C,uBACCR,EAAOkC,SAHV,MAGuBlC,EAAOmC,SAZvBnC,EAAOgC,cAkBtB,+CAEE,uBAFF,wCAIE,uBAJF,eAME,uBANF,gDClJNI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.34e7f631.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css'\n\nexport interface HealthResult {\n  ate: string\n  date: string\n  diff: number\n  exercise: string\n  fat: number\n  lean: number\n  totalWeight: number\n}\n\ninterface DecoratedHealthResult extends HealthResult {\n  weightColor: string\n  fatColor: string\n  diffColor: string\n}\n\nconst DESIRED_WEIGHT = 26.4\n\nconst decorate = (input: HealthResult[]): DecoratedHealthResult[] => {\n  const result: DecoratedHealthResult[] = []\n  for (let i = 0; i < input.length; i++) {\n    const day = input[i]\n\n    let weightColor = 'yellow'\n    let fatColor = 'yellow'\n    const diffColor = day.diff > 0 ? 'red' : 'green'\n\n    if (i !== 0) {\n      const previous = input[i - 1]\n      weightColor = day.totalWeight > previous.totalWeight ? 'red' : 'green'\n      if (day.totalWeight > previous.totalWeight && day.fat <= previous.fat) {\n        weightColor = 'yellow'\n      }\n      fatColor = day.fat > previous.fat ? 'red' : 'green'\n    }\n\n    result.push({\n      weightColor,\n      fatColor,\n      diffColor,\n      ...day,\n    })\n  }\n\n  return result\n}\n\nfunction App() {\n  // const items: DecoratedHealthResult[] = decorate(RESULT).reverse()\n\n  const [items, setItems] = React.useState<DecoratedHealthResult[]>([])\n  React.useEffect(() => {\n    fetch(\n      'https://mysplmqrfc.execute-api.eu-west-2.amazonaws.com/serverless_lambda_stage/weight'\n    )\n      .then((res) => res.json())\n      .then(\n        (result: any) => {\n          setItems(decorate(result).reverse())\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [])\n\n  const differenceLost =\n    items.length > 0\n      ? Math.round((items[0].fat - items[items.length - 1].fat) * 100) / 100\n      : 0\n\n  const differenceToGo =\n    items.length > 0\n      ? Math.round((items[0].fat - DESIRED_WEIGHT) * 100) / 100\n      : 0\n\n  const dRemain = Math.ceil(\n    (new Date('04/26/2022').getTime() - new Date().getTime()) /\n      (1000 * 3600 * 24)\n  )\n\n  const progress =\n    items.length > 0\n      ? Math.abs(\n          differenceLost / (items[items.length - 1].fat - DESIRED_WEIGHT)\n        ) * 100\n      : 0\n\n  return (\n    <main>\n      {items.length > 0 && (\n        <>\n          <h3>\n            {items[items.length - 1].fat}kg |{' '}\n            <span className=\"green\">{differenceLost}kg</span> |{' '}\n            <span className={`fat`}>{items[0].fat}kg</span> |{' '}\n            <span className=\"red\">{differenceToGo}kg</span> | {DESIRED_WEIGHT}\n            kg\n          </h3>\n          <p>\n            <em>{dRemain} days remaining to 19kg goal</em>\n          </p>\n          <div className=\"progress-container\">\n            <div className=\"progress-bar\">\n              <span\n                className=\"progress-bar-fill\"\n                style={{ width: `${progress}%` }}\n              ></span>\n            </div>\n          </div>\n        </>\n      )}\n      <table>\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>\n              Weight\n              <br />\n              (Fat + Lean)\n            </th>\n            <th>\n              Calories\n              <br />\n              (Exercise - Ate)\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {items.map((result: DecoratedHealthResult) => (\n            <tr key={result.date}>\n              <td>{result.date}</td>\n              <td>\n                <span className={result.weightColor}>{result.totalWeight}</span>\n                <br />\n                <span className={`fat ${result.fatColor}`}>\n                  {result.fat}\n                </span> + <span>{result.lean}</span>\n              </td>\n              <td>\n                <span className={result.diffColor}>{result.diff}</span>\n                <br />\n                {result.exercise} - {result.ate}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <p>\n        Ben More: 19kg\n        <br />\n        West Highland Way / Beinn Eighe: 21kg\n        <br />\n        Ben An: 24kg\n        <br />\n        South Glen Sheil Ridge / Ben Lui: 27kg\n      </p>\n    </main>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}